Error:
    Also called as syntax error (or) parsing error
    Developer will be responsible for error became not followed syntax
    Developer will be provide the solution
    Getting error program won't run



Exeception:
       Exception in runtime error
       user is responsible because not providing proper input occur
       Developer will handle the exception because to avoid program terminated abnormally


Bug:
        Bug is a logical error
        Developer is responsible for the bug because not providing proper logic
        Expected output not matching with Actual
        Developer needs to provide solution



Execption Handling:
            Exeception is runtime error which occurs at runtime because of invalid input given by user
            If any exception occurs the program will terminate abnoramally
            To avoid abnormal termination we are handling the exception

 In the error handling file  we got the execption is occured the program got terminated  abnormally
 To avoid abnormal termination we need to handle the execption using "try" and "except"

 Try:
    Try is a block of statements which may have exception statements
    If any exception occurs in "try" block,the try block will generate object to occured exception class and handover
    matching except block


 what is exception?
 Execption is a run time error


 What are the exception in python?
 In python execptions are classes



 Except:
 Except is a block of statements which handle the occured exception


 Syntax:
 try:
 ..........
 .............
 except exception-classname as aliasname(optional)


 Note:
 Normal Except Block                        Default Except block
Except exception class name:                except:



In python one try block multiple except blocks

syntax:

    try:
       ......
       ......
    except exception class name as alias name
        .....
        .....
    except exception class name as alias name
        .....
        ....
    except exception class name as alias name
            .....
            .....
Try with Else:
         A try block can have optional else block
         The statements under the else block will execute if there are no exception in try block

syntax:
    try:
        ---------
    except exception class name as alias name:
        ---------
    else:
       -----------



Try with Finally:
            The statements under the "finally" block will execute in any situation.
            It means if exception occured (or) not

Syntax:
    try:
     ......
     ......
     except exception class name as alias name:
          ......
          ......
     finally:
           .......
           .......

Note:
    It can have multiple except blocks (or) else block also


What is the difference between Default and Named Except block


Named Except Block:
        The named except block will handle only one exception which is name in except



# example on named except block

try:
    a = int(input("1stno: "))
    b= int(input("2ndno: "))
    print("sum = ",a+b)
    print("sub = ", a-b)
    print("mul = ", a/b)
    print("Div = ", a*b)
except ZeroDivisionError as Z:
    print(Z)
print("Thanks")




Default Except Block:
        Default except block can handle any exception


Note: If you are defining multiple except blocks the default except block must be in the last.
      Else you will get the syntax error


Example on default execption block

try:
    a = int(input("1stno: "))
    b= int(input("2ndno: "))
    print("sum = ",a+b)
    print("sub = ", a-b)
    print("mul = ", a/b)
    print("Div = ", a*b)
except:
    print("Invalid input")
print("Thanks")



            ...... Error handling program FILE......